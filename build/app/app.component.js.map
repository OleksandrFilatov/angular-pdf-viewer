{"version":3,"file":"app.component.js","sourceRoot":"","sources":["../../src/app/app.component.ts"],"names":[],"mappings":";AAGA,qBAA0B,eAAe,CAAC,CAAA;AAI1C;IAkBE;QAjBA,WAAM,GAAW,gBAAgB,CAAC;QAWlC,SAAI,GAAW,CAAC,CAAC;QACjB,SAAI,GAAW,GAAG,CAAC;QACnB,iBAAY,GAAY,KAAK,CAAC;QAC9B,YAAO,GAAY,IAAI,CAAC;QAItB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,oCAAa,GAAb,UAAc,MAAc;QAC1B,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC;IACtB,CAAC;IAED,oCAAa,GAAb,UAAc,MAAc;QAC1B,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC;IACtB,CAAC;IAMD,qCAAc,GAAd,UAAe,GAAQ;QACrB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACjB,CAAC;IACI,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,gBAAgB;oBAC1B,WAAW,EAAE,sBAAsB;oBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;iBACnC,EAAG,EAAE;KACL,CAAC;IAEK,2BAAc,GAA6D,EACjF,CAAC;IACF,mBAAC;AAAD,CAAC,AAhDD,IAgDC;AAhDY,oBAAY,eAgDxB,CAAA","sourcesContent":["/**\n * Created by vadimdez on 21/06/16.\n */\nimport { Component } from '@angular/core';\n\n\n\nexport class AppComponent {\n  pdfSrc: string = './pdf-test.pdf';\n\n  // or pass options as object\n  // pdfSrc: any = {\n  //   url: './pdf-test.pdf',\n  //   withCredentials: true,\n  //// httpHeaders: { // cross domain\n  ////   'Access-Control-Allow-Credentials': true\n  //// }\n  // };\n\n  page: number = 1;\n  zoom: number = 1.0;\n  originalSize: boolean = false;\n  showAll: boolean = true;\n  pdf: any;\n\n  constructor() {\n    this.onLoadComplete = this.onLoadComplete.bind(this);\n  }\n\n  incrementPage(amount: number) {\n    this.page += amount;\n  }\n\n  incrementZoom(amount: number) {\n    this.zoom += amount;\n  }\n\n  /**\n   * Get pdf information after it's loaded\n   * @param pdf\n   */\n  onLoadComplete(pdf: any) {\n    this.pdf = pdf;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'pdf-viewer-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}