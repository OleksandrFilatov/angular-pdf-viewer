{"version":3,"file":"app.component.js","sourceRoot":"","sources":["../../src/app/app.component.ts"],"names":[],"mappings":";;;;;;;;;;AAGA,sCAA0C;AAS1C;IAkBE;QAjBA,WAAM,GAAW,gBAAgB,CAAC;QAWlC,SAAI,GAAW,CAAC,CAAC;QACjB,SAAI,GAAW,GAAG,CAAC;QACnB,iBAAY,GAAY,KAAK,CAAC;QAC9B,YAAO,GAAY,IAAI,CAAC;QAItB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;IAED,oCAAa,GAAb,UAAc,MAAc;QAC1B,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC;IACtB,CAAC;IAED,oCAAa,GAAb,UAAc,MAAc;QAC1B,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC;IACtB,CAAC;IAKD,qCAAc,GAAd;QAAA,iBAYC;QAXC,IAAI,IAAI,GAAQ,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAEhD,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;YACxC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAE9B,MAAM,CAAC,MAAM,GAAG,UAAC,CAAM;gBACrB,KAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;YAChC,CAAC,CAAC;YAEF,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC;IAMD,wCAAiB,GAAjB,UAAkB,GAAQ;QACxB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACjB,CAAC;IACH,mBAAC;AAAD,CAAC,AAtDD,IAsDC;AAtDD;IAPC,gBAAS,CAAC;QACT,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,gBAAgB;QAC1B,WAAW,EAAE,sBAAsB;QACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;KACnC,CAAC;;gBAwDD;AAtDY,uBAAA,YAAY,CAAA","sourcesContent":["/**\n * Created by vadimdez on 21/06/16.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  moduleId: module.id,\n  selector: 'pdf-viewer-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  pdfSrc: string = './pdf-test.pdf';\n\n  // or pass options as object\n  // pdfSrc: any = {\n  //   url: './pdf-test.pdf',\n  //   withCredentials: true,\n  //// httpHeaders: { // cross domain\n  ////   'Access-Control-Allow-Credentials': true\n  //// }\n  // };\n\n  page: number = 1;\n  zoom: number = 1.0;\n  originalSize: boolean = false;\n  showAll: boolean = true;\n  pdf: any;\n\n  constructor() {\n    this.afterLoadComplete = this.afterLoadComplete.bind(this);\n  }\n\n  incrementPage(amount: number) {\n    this.page += amount;\n  }\n\n  incrementZoom(amount: number) {\n    this.zoom += amount;\n  }\n\n  /**\n   * Render PDF preview on selecting file\n   */\n  onFileSelected() {\n    var $img: any = document.querySelector('#file');\n\n    if (typeof (FileReader) !== 'undefined') {\n      var reader = new FileReader();\n\n      reader.onload = (e: any) => {\n        this.pdfSrc = e.target.result;\n      };\n\n      reader.readAsArrayBuffer($img.files[0]);\n    }\n  }\n\n  /**\n   * Get pdf information after it's loaded\n   * @param pdf\n   */\n  afterLoadComplete(pdf: any) {\n    this.pdf = pdf;\n  }\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}